{**
 * Copyright since 2007 PrestaShop SA and Contributors
 * PrestaShop is an International Registered Trademark & Property of PrestaShop SA
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License 3.0 (AFL-3.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/AFL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://devdocs.prestashop.com/ for more information.
 *
 * @author Dzemal Imamovic <dzemal.imamovic@outlook.com>
 * @version 1.0.6
 * @license MIT
 *}

document.addEventListener('DOMContentLoaded', function() {
    
    function showPremiumNotice(action) {
        var message = 'This feature is available in premium version. Contact me to get one!';
        
        // Try to use growl notifications if available
        if (typeof $ !== 'undefined' && $.growl) {
            $.growl.error({
                title: action,
                message: message,
                duration: 5000
            });
        } 
        // Fallback to jGrowl if available
        else if (typeof $ !== 'undefined' && $.jGrowl) {
            $.jGrowl(message, {
                header: action,
                theme: 'error',
                life: 5000
            });
        }
        // Fallback to standard alert
        else {
            alert(action + ': ' + message);
        }
        return false;
    }
    
    // Handle data-premium-action buttons
    var premiumButtons = document.querySelectorAll('[data-premium-action]');
    premiumButtons.forEach(function(button) {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            var action = this.getAttribute('data-premium-action');
            showPremiumNotice(action);
            return false;
        });
    });
    
    // Handle buttons with specific IDs
    var buttonIds = ['import-csv-btn', 'delete-by-schema-btn', 'delete-all-btn'];
    buttonIds.forEach(function(buttonId) {
        var button = document.getElementById(buttonId);
        if (button) {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                var action = this.textContent || this.innerText || 'Premium Feature';
                showPremiumNotice(action.trim());
                return false;
            });
        }
    });
    
    // Alternative method using jQuery if available
    if (typeof $ !== 'undefined') {
        $(document).on('click', '[data-premium-action]', function(e) {
            e.preventDefault();
            e.stopPropagation();
            var action = $(this).attr('data-premium-action');
            showPremiumNotice(action);
            return false;
        });
        
        // Handle form buttons that might be generated by HelperForm
        $(document).on('click', '.btn[data-premium-action], button[data-premium-action]', function(e) {
            e.preventDefault();
            e.stopPropagation();
            var action = $(this).attr('data-premium-action') || $(this).text().trim();
            showPremiumNotice(action);
            return false;
        });
    }
    
    // Make function globally available for legacy support
    window.showPremiumNotice = showPremiumNotice;
    
    console.log('ProductShortFacts admin.js loaded successfully');
});